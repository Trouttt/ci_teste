name: ci-workflow-teste
on:
  pull_request:
    branchs:
      - master

jobs:
  check-application:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version-go: ["1.15", "1.16"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      #aws cloudformation update-stack --stack-name nerus-o2-staging --template-body file://template.yaml
      - name: Checa se existe o bucket que irá alocar os itens
        id: stack_first_bucket_exists
        run: |
          if aws cloudformation describe-stacks --stack-name ${{ env.BUCKET_SETUP }}; then
            echo "stack_first_bucket_exists=true" >> $GITHUB_ENV
          else
            echo "stack_first_bucket_exists=false" >> $GITHUB_ENV
          fi

      - name: Roda o comando pra atualizar ou criar a pilha
        run: |
          if [ "${{ env.stack_first_bucket_exists }}" = "true" ]; then
            echo "Updating existing stack"
            aws cloudformation update-stack \
              --stack-name ${{ env.BUCKET_SETUP }} \
              --template-body file://setup/bucket-role.yaml \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          else
            echo "Creating new stack"
            aws cloudformation create-stack \
              --stack-name ${{ env.BUCKET_SETUP }} \
              --template-body file://setup/bucket-role.yaml \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          fi

      - name: Cria pasta 'log' caso ela não exista
        run: |
          if ! aws s3api list-objects-v2 --bucket your-bucket-name --prefix log/ | grep -q 'Contents'; then
            aws s3api put-object --bucket your-bucket-name --key log/
          fi
      - name: Faz o upload dos arquivos
        run: |
          aws s3 cp ../../log/log-group.yaml s3://testebucketpipeline/log/ --recursive

      - name: Checa se existe a pilha do cloudformation
        id: stack_exists
        run: |
          if aws cloudformation describe-stacks --stack-name your-stack-name; then
            echo "stack_exists=true" >> $GITHUB_ENV
          else
            echo "stack_exists=false" >> $GITHUB_ENV
          fi

      - name: Roda o comando pra atualizar ou criar a pilha
        run: |
          if [ "${{ env.stack_exists }}" = "true" ]; then
            echo "Updating existing stack"
            aws cloudformation update-stack \
              --stack-name your-stack-name \
              --template-body file://template.yaml \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          else
            echo "Creating new stack"
            aws cloudformation create-stack \
              --stack-name your-stack-name \
              --template-body file://template.yaml \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          fi
